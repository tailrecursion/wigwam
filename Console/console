<?php
// vim: ft=php

ini_set('error_log', '');

use Wigwam\ClassLoader;
use Wigwam\Console\Console;
use Wigwam\Console\ConsoleCommand;

if (! class_exists('Wigwam\\ClassLoader'))
  require_once(__DIR__.'/../ClassLoader.php');

Console::$option = getopt('f:hqz');

if (isset(Console::$option['h'])) {
  ConsoleCommand::h('');
  exit();
}

if (isset(Console::$option['f'])) {
  if (is_array(Console::$option['f']))
    foreach (Console::$option['f'] as Console::$tmp)
      require_once(Console::$tmp);
  else
    require_once(Console::$option['f']);
}

if (isset(Console::$option['z']))
  exit();

if (isset(Console::$option['q']))
  Console::$print = Console::$printnext = false;

Console::setup();

echo "\nConsole ready. Press ctrl-d to reload, ctrl-c to quit, /h for help.\n\n";

Console::fork(Console::$pid1);

if (Console::$pid1 > 0) {
  // parent
  while(true) {
    Console::readLine();
    Console::endCompletions();
    Console::getStatus();
    if (Console::$reboot)
      break;
  }
  pcntl_waitpid(Console::$pid1, Console::$status);
  echo "\n";
  pcntl_exec(array_shift($argv), $argv);
} else {
  // child
  while(true) {
    if (! Console::$reboot)
      Console::fork(Console::$pid2);
    else
      exit();

    if (Console::$pid2 > 0) {
      // child
      pcntl_waitpid(Console::$pid2, Console::$status);
      Console::sendStatus("ok");
    } else {
      // grandchild
      Console::$pid3 = posix_getpid();

      Console::serviceCompletionRequests();

      pcntl_signal(SIGCHLD, SIG_IGN);

      if (eval(Console::getLine()) === false)
        Console::printFatal(error_get_last());

      if (posix_getpid() != Console::$pid3) {
        // great-grandchild: could be here if eval'ed code called fork(), for
        // instance.
        exit(0);
      }

      Console::sendStatus("ok");

      posix_kill(posix_getppid(), SIGTERM);
      pcntl_signal_dispatch();
    }
  }
}
